---
title: "Replication Assessment GPID"
author: "Diana C. Garcia Rojas"
date: today
format: 
  html: 
    theme: flatly
    backgroundcolor: snow
    code-fold: true
    footnotes-hover: true
    code-summary: "Examine the code"
    toc: true
    embed-resources: true
    link-external-newwindow: true
execute:
  cache: true
---

## Introduction

This document intends to replicate the assignment from the GPID team at the World Bank for the STC described in <a href="https://randrescastaneda.github.io/Rtest1/Rtest1.html">R skills assessment</a>

## Summary statistics of GDP per capita by region

```{r data}
#| code-summary: "Given code"

tag      <- "202311081903"
base_url <- "https://github.com/randrescastaneda/pub_data/raw/"
data_url <- paste0(base_url, tag, "/data/Rtest1/")


wdi <-
  readr::read_rds(paste0(data_url, "wdi_in1.Rds"))
```

After downloading the data, I present the table with some statistics of GDP per capita by region and year:

```{r stats}
#| code-summary: "My code"
#| warning: false
# Packages
library(DT)
library(dplyr)
library(Hmisc)

# Check missing values
# sapply(wdi, function(x) sum(is.na(x))) 

# Table grouped by region and date
table <- wdi |>
  select(region,date,gdp, pop)|>
  filter(is.na(gdp)!=TRUE)|>
  rename(year=date)|>
  mutate(gdp_wgt= gdp*pop)

# Stats table with N, mean, sd, min and max
stats <- table |>
  group_by(region, year)|>
  summarise(N=n(),Mean=weighted.mean(gdp,pop),SD=sqrt(Hmisc::wtd.var(gdp,pop)),Min=min(gdp),Max=max(gdp), .groups = "drop")

# Present table                                                             
stats_pre<- rapply(stats, f = round, classes = "numeric", how = "replace", digits = 0)
datatable(stats_pre,options = list(pageLength = 10))
```
<details>
    <summary> Test to replicate </summary>

There is a difference on the $10^{10}$ decimal point. I used dplyr but I see the final output is in data.table format. Probably mean and standard deviations are calculated differently. 

```{r rep_stats}
#| warning: false

# Packages:
library(waldo)

# Data to replicate
stats_given= readr::read_rds(paste0(data_url, "wdi_summ_out.Rds"))

# Comparison
waldo::compare(stats,stats_given)
```

</details>

## Aggregate stats

Now, I aggregated the life expectancy (lifeex),GDP (gdp), and poverty headcount at international poverty line (pov_intl): 

```{r aggr}
#| warning: false
#| code-summary: "My code"

library(tidyr)
library(reshape2)
library(DescTools)

table_agg <- wdi |>
  select(region, date, lifeex, gdp, pov_intl, pop)|>
  gather("variable", "value", -c(region,date,pop))|>
  group_by(region,date,variable)|>
  summarise(pop_tot= sum(pop),mean= sum(value*pop, na.rm = TRUE)/sum(pop),sd=sqrt(Hmisc::wtd.var(value,pop, na.rm = TRUE)), min = min(value, na.rm = TRUE), max = max(value, na.rm = TRUE), median= DescTools::Median(value, weights =pop, na.rm = TRUE))|>
  rename(pop=pop_tot)|>
  gather("estimate", "value", -c(region,date,pop,variable))|>
  dcast(estimate+region+date+pop~variable)

table_agg_pre<- rapply(table_agg, f = round, classes = "numeric", how = "replace", digits = 3)
datatable(table_agg_pre,options = list(pageLength = 10))
```

<details>
    <summary> Test to replicate </summary>

Again, there is a difference on the $10^{10}$ decimal point. I used dplyr but I see the final output is in data.table format. Probably mean, standard deviations and medians are calculated differently. 

```{r rep_aggr}
#| warning: false

# Data to replicate
aggre_given= readr::read_rds(paste0(data_url, "wdi_agg_out.Rds"))

# Order table as wdi_agg_out
table_agg_ord = table_agg|>
  relocate(lifeex, .before = gdp)|>
  arrange(estimate,region, date)

aggre_given_ord =aggre_given|>
  arrange(estimate,region, date)

# Comparison
waldo::compare(table_agg_ord,aggre_given_ord)
```

</details>




